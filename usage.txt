Usage: 
./grinch <sparse matrix file> <region index bed file> <optional arguments>

Example: 
./grinch input/Gm12878_chr1_25kb.txt input/Gm12878_chr1_25kb.bed -o test/Gm12878_chr1

Input file format:
<sparse matrix file>
0	0	1000.2
0	1	1201.78
10	1	200.7
…
<region index bed file>
chr1	50000	75000	0
chr1	75000	100000	1
chr1	100000	125000	2
…
*Note: bin size/resolution is assumed to be the same across all bins and
is automatically detected from the bed file.

Output files:
<output>.tads 
start	end
50000	1175000
1200000	1275000
…
<output>.log
Includes information about parameters used, and time/memory consumption
*Note: TAD boundaries are inclusive, i.e., [start, end].

Optional arguments:
-o <output file prefix> 
	changes output file name to <output file prefix>.*, e.g. test/Nhek_chr1
	Note: will NOT create a directory if the specified directory does not
	exist.
	[default] ‘output’
-k <number of clusters>
	number of clusters
	[default] n/(1MB/bin size), where n is the number of bins in 
	the input matrix, i.e., expected size of cluster is 1MB
-e <expected size of cluster>
	a different way to specify the number of clusters by the expected size 
	of a cluster, i.e. if 500000, k = n/(500KB/bin size), where n is the 
	number of bins in the input matrix. Note: -k overrides -e.
	[default] 1000000, i.e., k = n/(1MB/bin size)
-n <neighborhood radius size in basepairs, in multiples of resolution in bed file>
	neighborhood radius used in regularization graph, in base pairs rather 
	than number of bins. 
	e.g. -n 100000 would make neighborhood radius of 4 bins in 25kb resolution 
	[default] 100000
-l <lambda>
	strength of regularization
	[default] 1
-f
	output factor matrix files, <output>.U and <output>.V, in DENSE format,
	with n lines and k columns in each line, where n is the number of bins
	in the input matrix and k is the number of clusters from -k or
	calculated from -a
-s 
	output smoothed matrix file, <output>.smoothed, in a sparse format 
	(same format as the input sparse matrix file)
-g
	output graph used for regularization, <output>.graph, in DENSE format,
	with n lines and n columns, where n is the number of bins in the input
	matrix 
